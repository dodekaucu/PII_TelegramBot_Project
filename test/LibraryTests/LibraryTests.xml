<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LibraryTests</name>
    </assembly>
    <members>
        <member name="T:ProgramTests.InvitarHandlerTests">
            <summary>
            Esta clase prueba el Handler AdminInvitarHandler.
            </summary>
        </member>
        <member name="M:ProgramTests.InvitarHandlerTests.Setup">
            <summary>
            Crea una instancia de contenedor, el handler a probar, el message asi como asignarle una ID. Y ademas
            crea una instancia de TelegramMSG adapter.
            </summary>
        </member>
        <member name="M:ProgramTests.InvitarHandlerTests.TestInvitaraEmpresaNOvalido">
            <summary>
            Este test prueba como se procesa el mensaje cuando el usuario no es administrador.
            </summary>
        </member>
        <member name="M:ProgramTests.InvitarHandlerTests.TestInvitaraEmpresaValido">
            <summary>
            Este test prueba como se procesa el mensaje cuando el usuario es administrador.
            </summary>
        </member>
        <member name="T:ProgramTests.PublicarOfertaRecurrenteTests">
            <summary>
            Esta clase prueba el handler de PublicarOferta. Concretamente cuando se toma la ruta de oferta recurrente.
            </summary>
        </member>
        <member name="M:ProgramTests.PublicarOfertaRecurrenteTests.Setup">
            <summary>
            Crea una instancia de clasificacion, de rubro, de contenedor, el handler a utilizar, un message junto a
            un user que se le agrega la ID asi como el msj Adapter. Por ultimo se crea la empresa a publicar la oferta.
            </summary>
        </member>
        <member name="M:ProgramTests.PublicarOfertaRecurrenteTests.TestPublicarOfertaRecurrenteHandler">
            <summary>
            Este test prueba como se procesan los mensajes involucrados en la creacion de una oferta recurrente.
            </summary>
        </member>
        <member name="T:ProgramTests.PublicarOfertaHandlerTests">
            <summary>
            Esta clase prueba el handler de PublicarOferta. Concretamente cuando se toma la ruta de oferta única.
            </summary>
        </member>
        <member name="M:ProgramTests.PublicarOfertaHandlerTests.Setup">
            <summary>
            Crea una instancia de clasificacion, de rubro, de contenedor, el handler a utilizar, un message junto a
            un user que se le agrega la ID asi como el msj Adapter. Por ultimo se crea la empresa a publicar la oferta.
            </summary>
        </member>
        <member name="M:ProgramTests.PublicarOfertaHandlerTests.TestPublicarOfertaUnicaHandler">
            <summary>
            Este test prueba como se procesan los mensajes involucrados en la creacion de una oferta única.
            </summary>
        </member>
        <member name="T:ProgramTests.RegistroHandlerTests">
            <summary>
            Esta clase prueba el handler Registro.
            </summary>
        </member>
        <member name="M:ProgramTests.RegistroHandlerTests.Setup">
             <summary>
            Crea una instancia de contenedor, el handler a probar, un rubro, el message asi como asignarle una ID. Y ademas
             crea una instancia de TelegramMSG adapter.
             </summary>
        </member>
        <member name="M:ProgramTests.RegistroHandlerTests.TestRegistroEmprendedorHandle">
            <summary>
            Este test prueba como se procesan los mensajes para el registro de un emprendedor (usuario con una ID
            no invitada).
            </summary>
        </member>
        <member name="M:ProgramTests.RegistroHandlerTests.TestRegistroEmpresaHandle">
            <summary>
            Este test prueba como se procesan los mensajes para realizar el registro de una Empresa (usuario con una ID
            invitada).
            </summary>
        </member>
        <member name="M:ProgramTests.RegistroHandlerTests.TestRegistroUsuarioRegistrado">
            <summary>
            Este test representa lo que sucede cuando el usuario intenta registrarse otra vez.
            </summary>
        </member>
    </members>
</doc>
